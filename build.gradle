// Top-level build file where you can add configuration options common to all sub-projects/modules.
ext {
    minSdkVersion = 16
    targetSdkVersion = 30
    compileSdkVersion = 30
    buildToolsVersion = "30.0.2"

    // version information
    versionMajor = 4
    versionMinor = 6
    versionPatch = 3
    versionName = "${versionMajor}.${versionMinor}.${versionPatch}"


    // App dependencies
    multidexVersion = '2.0.1'
    coreVersion = '1.6.0-alpha03'
    appCompatVersion = '1.2.0'
    materialVersion = '1.3.0'
    paletteVersion = '1.0.0'
    constraintLayoutVersion = '2.0.4'
    navigationFragmentVersion = '2.3.5'
    navigationUiVersion = '2.3.5'
    recyclerViewVersion = '1.2.0'
    cardViewVersion = "1.0.0"
    fragmentVersion = '1.3.3'
    viewPager2Version = '1.0.0'
    dynamicanimationVersion = '1.0.0'

    autoFillVersion = '1.1.0'

    // Worker
    workerVersion = '2.5.0'
    concurrentVersion = '1.1.0'

    roomVersion = '2.2.5'

    daggerVersion = '2.35.1'

    googlePlayServicesBaseVersion = '16.0.0'

    googleApiClientVersion = '1.31.4'
    mapsVersion = '17.0.1'
    mapsUtilsVersion = '2.2.3'
    locationVersion = '18.0.0'
    placesVersion = "2.4.0"

    firebaseBomVersion = '26.0.0'
    adsVersion = '20.1.0'

    parcelerVersion = '1.1.13'

    rxjavaVersion = '2.2.21'
    rxandroidVersion = "2.1.1"

    butterknifeVersion = '10.2.3'

    /*
    Avoid crash : Could not find class 'java.lang.invoke.MethodHandles$Lookup', referenced from method retrofit2.Platform.<init>
    with version 2.6.3
     */
    retrofit2Version = '2.6.0'
//    retrofit2Version = '2.9.0'
    okhttpBomVersion = '5.0.0-alpha.2'
    /*
    OkHttp 3.13+ Requires Android 5+
    https://medium.com/square-corner-blog/okhttp-3-13-requires-android-5-818bb78d07ce
     */
    okhttpVersion = '3.12.0'
    okhttpLoggingVersion = '3.12.0'

    moshiVersion = '1.12.0'

    glideVersion = '4.12.0'
    blurryVersion = '3.0.0'
    glideTransformationVersion = '4.0.0'

    eventBusVersion = '3.2.0'

    dexterVersion = '6.2.2'

    // GoldFinger
    goldfingerVersion = '2.0.1'

    threetenVersion = '1.3.1'

    lombokVersion = '1.18.20'
    timberVersion = '4.7.1'

    //Tests
    junitVersion = '4.13.2'
    testJUnitVersion = '1.1.2'
    testEspressoVersion = '3.3.0'

    generalDependencies = [

            multidex              : "androidx.multidex:multidex:$multidexVersion",
            core                  : "androidx.core:core:$coreVersion",
            appcompat             : "androidx.appcompat:appcompat:$appCompatVersion",
            material              : "com.google.android.material:material:$materialVersion",
            palette               : "androidx.palette:palette:$paletteVersion",
            constraintLayout      : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            navigationFragment    : "androidx.navigation:navigation-fragment:$navigationFragmentVersion",
            navigationUi          : "androidx.navigation:navigation-ui:$navigationUiVersion",
            recyclerView          : "androidx.recyclerview:recyclerview:$recyclerViewVersion",
            cardView              : "androidx.cardview:cardview:$cardViewVersion",
            fragment              : "androidx.fragment:fragment:$fragmentVersion",
            springForce           : "androidx.dynamicanimation:dynamicanimation:$dynamicanimationVersion",

            viewPager2            : "androidx.viewpager2:viewpager2:$viewPager2Version",

            autoFill              : "androidx.autofill:autofill:$autoFillVersion",

            // Worker
            workerRuntime         : "androidx.work:work-runtime:$workerVersion",
            workerRxJava3         : "androidx.work:work-rxjava3:$workerVersion",
            workerMultiprocess    : "androidx.work:work-multiprocess:$workerVersion",
            concurrent            : "androidx.concurrent:concurrent-futures:$concurrentVersion",


            /* Android Architecture Component - Room Persistance Lib  */
            roomRuntime           : "androidx.room:room-runtime:$roomVersion",
            roomRX                : "androidx.room:room-rxjava2:$roomVersion",
//            roomRX                : "androidx.room:room-rxjava3:$roomVersion",
            roomCompiler          : "androidx.room:room-compiler:$roomVersion",

            /* Dagger2 - We are going to use dagger.android which includes
             * support for Activity and fragment injection so we need to include
             * the following dependencies */
            dagger                : "com.google.dagger:dagger:$daggerVersion",
            daggerCompiler        : "com.google.dagger:dagger-compiler:$daggerVersion",
            daggerAndroid         : "com.google.dagger:dagger-android:$daggerVersion",
            daggerAndroidSupport  : "com.google.dagger:dagger-android-support:$daggerVersion",// if you use the support libraries
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:$daggerVersion",

            // Maps
            googlePlayServices    : "com.google.android.gms:play-services-base:$googlePlayServicesBaseVersion",
            googleAPIClient       : "com.google.api-client:google-api-client:$googleApiClientVersion",
            maps                  : "com.google.android.gms:play-services-maps:$mapsVersion",
            mapsUtils             : "com.google.maps.android:android-maps-utils:$mapsUtilsVersion",
            location              : "com.google.android.gms:play-services-location:$locationVersion",
            places                : "com.google.android.libraries.places:places:$placesVersion",

            firebasePlatform      : "com.google.firebase:firebase-bom:$firebaseBomVersion",
            firebaseAnalitycs     : "com.google.firebase:firebase-analytics",
            firebaseAuth          : "com.google.firebase:firebase-auth",
            firebaseCraslytics    : "com.google.firebase:firebase-crashlytics",
            firebaseMessaging     : "com.google.firebase:firebase-messaging",
            firebasePerf          : "com.google.firebase:firebase-perf",
            firebaseCloudstorage  : "com.google.firebase:firebase-storage",
            firebaseAds           : "com.google.android.gms:play-services-ads:$adsVersion",


            // Parceler
            parceler              : "org.parceler:parceler-api:$parcelerVersion",
            parcelerAnnotation    : "org.parceler:parceler:$parcelerVersion",

            // RxJava / RxAndroid
            rxjava                : "io.reactivex.rxjava2:rxjava:$rxjavaVersion",
            rxandroid             : "io.reactivex.rxjava2:rxandroid:$rxandroidVersion",

            // Butterknife : Views binding
            //noinspection AnnotationProcessorOnCompilePath
            butterknife           : "com.jakewharton:butterknife:$butterknifeVersion",
            butterknifeAnnotation : "com.jakewharton:butterknife-compiler:$butterknifeVersion",

            /* Retrofit using RxJava2, Okhttp, Okhttp logging interceptor, Gson  */
            retrofit              : "com.squareup.retrofit2:retrofit:$retrofit2Version",
            retrofitRxJava        : "com.squareup.retrofit2:adapter-rxjava2:$retrofit2Version",
            retrofitConverterGson : "com.squareup.retrofit2:converter-gson:$retrofit2Version",
            retrofitConverterMoshi: "com.squareup.retrofit2:converter-moshi:$retrofit2Version",
//            retrofitRxJava        : "com.squareup.retrofit2:adapter-rxjava3:$retrofit2Version",

            // OkHttp
//            okHttpBom             : "com.squareup.okhttp3:okhttp-bom:$okhttpBomVersion",
            okHttp                : "com.squareup.okhttp3:okhttp:$okhttpVersion",
            okHttpLogging         : "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingVersion",

            // Moshi
            moshi                 : "com.squareup.moshi:moshi:$moshiVersion",

            // EventBus
            eventBus              : "org.greenrobot:eventbus:$eventBusVersion",

            // Dexter
            dexter                : "com.karumi:dexter:$dexterVersion",

            //ThreeTen : Alternative to Android Calendar API
            threeten              : "com.jakewharton.threetenabp:threetenabp:$threetenVersion",

            // Glide
            glide                 : "com.github.bumptech.glide:glide:$glideVersion",
            glideAnnotation       : "com.github.bumptech.glide:compiler:$glideVersion",

            // Blurry
            blurry                : "jp.wasabeef:blurry:$blurryVersion",
            glideTransformation   : "jp.wasabeef:glide-transformations:$glideTransformationVersion",

            // GoldFinger
            goldfinger            : "co.infinum:goldfinger:$goldfingerVersion",
            goldfingerRX          : "co.infinum:goldfinger-rx:$goldfingerVersion",


            // Lombok
            lombok                : "org.projectlombok:lombok:$lombokVersion",
            lombokAnnotation      : "org.projectlombok:lombok:$lombokVersion",

            // Timber : Logging library
            timber                : "com.jakewharton.timber:timber:$timberVersion"
    ]

    testDependencies = [

            junit    : "junit:junit:$junitVersion",
            testJUnit: "androidx.test.ext:junit:$testJUnitVersion",
            espresso : "androidx.test.espresso:espresso-core:$testEspressoVersion",

            workTest : "androidx.work:work-testing:$workerVersion"
    ]
}

buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        // Butterknife
        classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.3'

        // Google Services
        classpath 'com.google.gms:google-services:4.3.5'

        // Add the Crashlytics Gradle plugin (be sure to add version
        // 2.0.0 or later if you built your app with Android Studio 4.1).
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.5.2'

        // Add the dependency for the Performance Monitoring plugin
        classpath 'com.google.firebase:perf-plugin:1.3.5'  // Performance Monitoring plugin
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task printVersionName {
    doLast {
        print rootProject.ext.versionName
    }
}